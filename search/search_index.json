{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"CivicEye","text":"<p>CivicEye streamlines the process of validating German civic numbers against OpenStreetMap. Provide a ZIP code (<code>PLZ</code>) and a house number (<code>Hausnummer</code>) and the app lists every matching object, complete with static map thumbnails. If you also upload a reference photo, CLIP embeddings rank the most similar locations.</p>"},{"location":"#why-civiceye","title":"Why CivicEye?","text":"<ul> <li>Comprehensive search \u2013 find every OpenStreetMap entry matching your civic number.</li> <li>Street-level review \u2013 browse Google Street View imagery (with static map fallback) right inside the app.</li> <li>Visual similarity \u2013 optional CLIP ranking brings the most likely matches to the top.</li> <li>Streamlit UX \u2013 a clean, multi-step interface that guides users from search to confirmation.</li> </ul>"},{"location":"#quickstart","title":"Quickstart","text":"<pre><code>uv venv .venv\nsource .venv/bin/activate\npip install -e .[viz]\nstreamlit run main.py\n</code></pre> <p>Fill out the ZIP and house number fields, optionally upload a JPG/PNG, and select a result. On first launch you\u2019ll be prompted for a Google Maps Static API key (stored locally in <code>.streamlit/google_maps_api_key.txt</code>). The selected card links back out to Google Maps for final verification.</p>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>src/civiceye/\n\u251c\u2500\u2500 clip/                # CLIP similarity helpers\n\u251c\u2500\u2500 openmaps/            # Overpass querying &amp; Google static map helpers\n\u2514\u2500\u2500 streamlit_app/       # Streamlit page configuration and UI\n</code></pre> <p><code>main.py</code> simply bootstraps the package so <code>streamlit run main.py</code> works out of the box.</p>"},{"location":"#optional-clip-dependencies","title":"Optional CLIP dependencies","text":"<p>Install the <code>viz</code> extra (or the individual packages) to enable similarity scoring:</p> <pre><code>pip install -e .[viz]\n</code></pre> <p>Without these libraries, CivicEye still retrieves addresses and maps\u2014only the ranking feature is disabled.</p>"},{"location":"#google-maps-static-api-key","title":"Google Maps Static API key","text":"<p>CivicEye renders map previews through the Google Maps Static API. When no key is detected the app prompts you for one and saves it locally. You can create a key in the Google Cloud Console and paste it into the UI. Delete <code>.streamlit/google_maps_api_key.txt</code> if you ever need to reset the stored key.</p>"},{"location":"#deploying-to-github-pages","title":"Deploying to GitHub Pages","text":"<p>This repository ships with a MkDocs configuration (<code>mkdocs.yml</code>) and a GitHub Actions workflow that publishes the documentation to GitHub Pages:</p> <ol> <li>Push your changes to GitHub.</li> <li>Ensure GitHub Actions is enabled.</li> <li>After the workflow runs, open the repository settings \u2192 Pages, and select the <code>gh-pages</code> branch.</li> </ol> <p>The documentation will be available at <code>https://&lt;your-username&gt;.github.io/&lt;repository&gt;/</code>.</p>"},{"location":"#need-more","title":"Need more?","text":"<ul> <li>Streamlit documentation: https://docs.streamlit.io/</li> <li>OpenStreetMap Overpass API: https://wiki.openstreetmap.org/wiki/Overpass_API</li> <li>CLIP model (openai/clip-vit-base-patch32): https://huggingface.co/openai/clip-vit-base-patch32</li> </ul>"}]}